{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BAKMC,EAAO,CACXC,WAAYC,SAASC,eAAe,eACpCC,MAAOF,SAASG,cAAc,uBAC9BC,UAAWJ,SAASG,cAAc,+BAClCE,QAASL,SAASG,cAAc,YAChCG,YAAaN,SAASG,cAAc,cACpCI,SAAUP,SAASG,cAAc,uBAG7BK,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,eAC9BC,EAAa,IAAI,EAAAC,EAAAC,SACnBC,EAAmB,EAqDvB,SAASC,EAAaC,GACpBC,EAAQnB,EAAKQ,aAEbU,EAASE,KAAI,SAAAC,GACX,IACEC,EAOED,EAPFC,aACAC,EAMEF,EANFE,cACAC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,MACAC,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,SACAC,EACEP,EADFO,UAGIC,EAAS,6DAEiBC,OADFP,EAAc,0CACUO,OAAtBR,EAAa,WAKvCQ,OALgDN,EAAK,8IASrDM,OAJAL,EAAM,6EAQNK,OAJAJ,EAAM,gFAQNI,OAJAH,EAAS,iFAICG,OAAVF,EAAU,sCAKhB5B,EAAKO,QAAQwB,mBAAmB,YAAaF,GAE7CnB,EAASsB,UAETC,EAAQjC,EAAKQ,Y,IAuBjB,SAASW,EAAQe,GACf,OAAOA,EAAGC,UAAUC,IAAI,kB,CAG1B,SAASH,EAAQC,GACf,OAAOA,EAAGC,UAAUE,OAAO,kB,CAzH7BrC,EAAKC,WAAWqC,iBAAiB,UAIjC,SAAqBC,GACnBA,EAAEC,iBAGF,IAAIC,EAAazC,EAAKI,MAAMsC,MAAMC,OAGlC,IAAKF,GAAcA,IAAe5B,EAAW+B,WAC3C,OAIF5C,EAAKI,MAAMsC,MAAQD,EAGnBzC,EAAKI,MAAMyC,OAEXhC,EAAWiC,SAASL,GACpB5B,EAAWkC,kBAEXlC,EACGmC,cACAC,MAAK,SAAAC,G,IAmBahC,EAnBViC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UACO,IAAhBD,EAAKE,QAOTvD,EAAAwD,OAAOC,KAAK,oBAA8BzB,OAAVsB,EAAU,aAE1CpC,EAAmBwC,KAAKC,KAAKL,EAAYD,EAAKE,OAAS,GAStCnC,EAPHiC,EAQlBnD,EAAKO,QAAQmD,UAAY,GAEzBzC,EAAaC,GARTe,EAAQjC,EAAKS,WAZXX,EAAAwD,OAAOK,QACL,2E,IAaLC,OAAM,SAAAC,G,OAASA,EAAMC,O,OAzC1B9D,EAAKQ,YAAY8B,iBAAiB,SAgGlC,WACEzB,EAAWkD,sBAEXlD,EAAWmC,cAAcC,MAAK,SAAAC,G,IAgCtBc,EAhCyBb,EAAID,EAAJC,KAC3BnC,GAAoB,GACtBlB,EAAAwD,OAAOC,KACL,6DACApC,EAAQnB,EAAKQ,cAIjBQ,GAAoB,EAEpBC,EAAakC,GAsBPa,EAAuB9D,SAC5BG,cAAc,YACd4D,kBAAkBC,wBAFbC,OAIRC,OAAOC,SAAS,CACdC,IAAkB,IAAbN,EACLO,SAAU,U,OAxIdvE,EAAKS,SAAS6B,iBAAiB,SA0H/B,WACE8B,OAAOI,SAAS,CACdF,IAAK,EACLC,SAAU,U","sources":["src/js/gallery_with_button.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport PixabayAPI from './fetchPhotos';\n\nconst refs = {\n  searchForm: document.getElementById('search-form'),\n  input: document.querySelector('.search-form__input'),\n  submitBtn: document.querySelector('.search-form__submit-button'),\n  gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n  toTopBtn: document.querySelector('.scroll-top-button'),\n};\n\nconst lightbox = new SimpleLightbox('.photo-link');\nconst pixabayAPI = new PixabayAPI();\nlet contentPagesLeft = 0;\n\nrefs.searchForm.addEventListener('submit', submitQuery);\nrefs.loadMoreBtn.addEventListener('click', loadMorePics);\nrefs.toTopBtn.addEventListener('click', scrollToTop);\n\nfunction submitQuery(e) {\n  e.preventDefault();\n\n  /**sanitizes query */\n  let inputValue = refs.input.value.trim();\n\n  /**checking if current query is the same as the previous one, to reduce the load on server  */\n  if (!inputValue || inputValue === pixabayAPI.getQuery()) {\n    return;\n  }\n\n  /**just for a cleaner look of input field after sanitizing */\n  refs.input.value = inputValue;\n\n  /**removes focus of the input field after submit */\n  refs.input.blur();\n\n  pixabayAPI.setQuery(inputValue);\n  pixabayAPI.resetPageNumber();\n\n  pixabayAPI\n    .fetchPhotos()\n    .then(({ hits, totalHits }) => {\n      if (hits.length === 0) {\n        Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n        return;\n      }\n\n      Notify.info(`Hooray! We found ${totalHits} images.`);\n\n      contentPagesLeft = Math.ceil(totalHits / hits.length - 1);\n\n      loadFirstPics(hits);\n\n      showBtn(refs.toTopBtn);\n    })\n    .catch(error => error.message);\n}\n\nfunction loadFirstPics(pictures) {\n  refs.gallery.innerHTML = '';\n\n  renderMarkup(pictures);\n}\n\nfunction renderMarkup(pictures) {\n  hideBtn(refs.loadMoreBtn);\n\n  pictures.map(picture => {\n    const {\n      webformatURL,\n      largeImageURL,\n      tags,\n      likes,\n      views,\n      comments,\n      downloads,\n    } = picture;\n\n    const markup = `<div class=\"photo-card\">\n    <a class=\"photo-link\" href=\"${largeImageURL}\">\n      <img class=\"photo-img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"305\" height=\"200\"/>\n    </a>\n    <div class=\"info\">\n      <p class=\"info-item\">\n        <b>Likes</b>\n        ${likes}\n      </p>\n      <p class=\"info-item\">\n        <b>Views</b>\n        ${views}\n      </p>\n      <p class=\"info-item\">\n        <b>Comments</b>\n        ${comments}\n      </p>\n      <p class=\"info-item\">\n        <b>Downloads</b>\n        ${downloads}\n      </p>\n    </div>\n  </div>`;\n\n    refs.gallery.insertAdjacentHTML('beforeend', markup);\n\n    lightbox.refresh();\n\n    showBtn(refs.loadMoreBtn);\n  });\n}\n\nfunction loadMorePics() {\n  pixabayAPI.incrementPageNumber();\n\n  pixabayAPI.fetchPhotos().then(({ hits }) => {\n    if (contentPagesLeft <= 0) {\n      Notify.info(\n        \"We're sorry, but you've reached the end of search results.\",\n        hideBtn(refs.loadMoreBtn)\n      );\n    }\n\n    contentPagesLeft -= 1;\n\n    renderMarkup(hits);\n\n    scrollToNextResult();\n  });\n}\n\nfunction hideBtn(el) {\n  return el.classList.add('visually-hidden');\n}\n\nfunction showBtn(el) {\n  return el.classList.remove('visually-hidden');\n}\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction scrollToNextResult() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2.2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$9d12b7efbf5b80f8$var$refs","searchForm","document","getElementById","input","querySelector","submitBtn","gallery","loadMoreBtn","toTopBtn","$9d12b7efbf5b80f8$var$lightbox","$parcel$interopDefault","$5IjG7","$9d12b7efbf5b80f8$var$pixabayAPI","$1nXjm","default","$9d12b7efbf5b80f8$var$contentPagesLeft","$9d12b7efbf5b80f8$var$renderMarkup","pictures","$9d12b7efbf5b80f8$var$hideBtn","map","picture","webformatURL","largeImageURL","tags","likes","views","comments","downloads","markup","concat","insertAdjacentHTML","refresh","$9d12b7efbf5b80f8$var$showBtn","el","classList","add","remove","addEventListener","e","preventDefault","inputValue","value","trim","getQuery","blur","setQuery","resetPageNumber","fetchPhotos","then","param","hits","totalHits","length","Notify","info","Math","ceil","innerHTML","failure","catch","error","message","incrementPageNumber","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","scrollTo"],"version":3,"file":"gallery_with_button.df6ab32c.js.map"}