{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAKA,MAAMC,EAAO,CACXC,WAAYC,SAASC,eAAe,eACpCC,MAAOF,SAASG,cAAc,uBAC9BC,UAAWJ,SAASG,cAAc,+BAClCE,QAASL,SAASG,cAAc,YAChCG,SAAUN,SAASG,cAAc,uBAG7BI,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,eAC9BC,EAAa,IAAI,EAAAC,EAAAC,SACvB,IAAIC,EAAmB,EAsDvB,SAASC,EAAaC,GACpBA,EAASC,KAAIC,IACX,MAAMC,aACJA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,GACEP,EAEEQ,EAAS,6DACeN,wBAChBD,WAAsBE,kJAK9BC,6EAIAC,gFAIAC,iFAIAC,sCAKN1B,EAAKO,QAAQqB,mBAAmB,YAAaD,GAE7ClB,EAASoB,SAAS,G,CAzFtB7B,EAAKC,WAAW6B,iBAAiB,UAIjC,SAAqBC,GACnBA,EAAEC,iBAGF,IAAIC,EAAajC,EAAKI,MAAM8B,MAAMC,OAGlC,IAAKF,GAAcA,IAAerB,EAAWwB,WAC3C,OAIFpC,EAAKI,MAAM8B,MAAQD,EAGnBjC,EAAKI,MAAMiC,OAEXzB,EAAW0B,SAASL,GACpBrB,EAAW2B,kBAEX3B,EACG4B,cACAC,MAAK,EAACC,KAAEA,EAAIC,UAAEA,MAmBnB,IAAuB1B,EAlBG,IAAhByB,EAAKE,QAOT9C,EAAA+C,OAAOC,KAAK,oBAAoBH,aAEhC5B,EAAmBgC,KAAKC,KAAKL,EAAYD,EAAKE,OAAS,GAStC3B,EAPHyB,EAQlB1C,EAAKO,QAAQ0C,UAAY,GAEzBjC,EAAaC,GARDjB,EAAKQ,SAwEP0C,UAAUC,OAAO,oBApFrBrD,EAAA+C,OAAOO,QACL,2EAWkB,IAEvBC,OAAMC,GAASA,EAAMC,S,IAzC1BvD,EAAKQ,SAASsB,iBAAiB,SAkH/B,WACE0B,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,U","sources":["src/js/gallery_infinite-scroll.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport PixabayAPI from './fetchPhotos';\n\nconst refs = {\n  searchForm: document.getElementById('search-form'),\n  input: document.querySelector('.search-form__input'),\n  submitBtn: document.querySelector('.search-form__submit-button'),\n  gallery: document.querySelector('.gallery'),\n  toTopBtn: document.querySelector('.scroll-top-button'),\n};\n\nconst lightbox = new SimpleLightbox('.photo-link');\nconst pixabayAPI = new PixabayAPI();\nlet contentPagesLeft = 0;\n\n/** Listeners*/\nrefs.searchForm.addEventListener('submit', submitQuery);\nrefs.toTopBtn.addEventListener('click', scrollToTop);\n\n/** Functions */\nfunction submitQuery(e) {\n  e.preventDefault();\n\n  /**sanitizes query */\n  let inputValue = refs.input.value.trim();\n\n  /**checking if current query is the same as the previous one, to reduce the load on server  */\n  if (!inputValue || inputValue === pixabayAPI.getQuery()) {\n    return;\n  }\n\n  /**just for a cleaner look of input field after sanitizing */\n  refs.input.value = inputValue;\n\n  /**removes focus from the input field after submit */\n  refs.input.blur();\n\n  pixabayAPI.setQuery(inputValue);\n  pixabayAPI.resetPageNumber();\n\n  pixabayAPI\n    .fetchPhotos()\n    .then(({ hits, totalHits }) => {\n      if (hits.length === 0) {\n        Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n        return;\n      }\n\n      Notify.info(`Hooray! We found ${totalHits} images.`);\n\n      contentPagesLeft = Math.ceil(totalHits / hits.length - 1);\n\n      loadFirstPics(hits);\n\n      showBtn(refs.toTopBtn);\n    })\n    .catch(error => error.message);\n}\n\nfunction loadFirstPics(pictures) {\n  refs.gallery.innerHTML = '';\n\n  renderMarkup(pictures);\n}\n\nfunction renderMarkup(pictures) {\n  pictures.map(picture => {\n    const {\n      webformatURL,\n      largeImageURL,\n      tags,\n      likes,\n      views,\n      comments,\n      downloads,\n    } = picture;\n\n    const markup = `<div class=\"photo-card\">\n    <a class=\"photo-link\" href=\"${largeImageURL}\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"305px\" height=\"200px\"/>\n    </a>\n    <div class=\"info\">\n      <p class=\"info-item\">\n        <b>Likes</b>\n        ${likes}\n      </p>\n      <p class=\"info-item\">\n        <b>Views</b>\n        ${views}\n      </p>\n      <p class=\"info-item\">\n        <b>Comments</b>\n        ${comments}\n      </p>\n      <p class=\"info-item\">\n        <b>Downloads</b>\n        ${downloads}\n      </p>\n    </div>\n  </div>`;\n\n    refs.gallery.insertAdjacentHTML('beforeend', markup);\n\n    lightbox.refresh();\n  });\n}\n\nfunction loadMorePics() {\n  pixabayAPI.incrementPageNumber();\n\n  pixabayAPI.fetchPhotos().then(({ hits }) => {\n    if (contentPagesLeft <= 0) {\n      Notify.info(\"We're sorry, but you've reached the end of search results.\");\n    }\n\n    contentPagesLeft -= 1;\n\n    renderMarkup(hits);\n  });\n}\n\nfunction hideBtn(el) {\n  return el.classList.add('visually-hidden');\n}\n\nfunction showBtn(el) {\n  return el.classList.remove('visually-hidden');\n}\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$428241100400b928$var$refs","searchForm","document","getElementById","input","querySelector","submitBtn","gallery","toTopBtn","$428241100400b928$var$lightbox","$parcel$interopDefault","$fZKcF","$428241100400b928$var$pixabayAPI","$7tL9G","default","$428241100400b928$var$contentPagesLeft","$428241100400b928$var$renderMarkup","pictures","map","picture","webformatURL","largeImageURL","tags","likes","views","comments","downloads","markup","insertAdjacentHTML","refresh","addEventListener","e","preventDefault","inputValue","value","trim","getQuery","blur","setQuery","resetPageNumber","fetchPhotos","then","hits","totalHits","length","Notify","info","Math","ceil","innerHTML","classList","remove","failure","catch","error","message","window","scrollTo","top","behavior"],"version":3,"file":"gallery_infinite-scroll.582cd6da.js.map"}